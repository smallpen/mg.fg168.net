services:
  nginx:
    image: nginx:alpine
    container_name: laravel_admin_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./public:/var/www/html/public:ro
      - ./storage/app/public:/var/www/html/storage/app/public:ro
      - ssl_certs:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - laravel_admin_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.prod
    container_name: laravel_admin_app_prod
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./public/build:/var/www/html/public/build:ro
      - ./.env.production:/var/www/html/.env:ro
      - app_logs:/var/www/html/storage/logs
      - ./docker/scripts:/scripts:ro
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-mg_db}
      - DB_USERNAME=${DB_USERNAME:-db_user}
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    command: /scripts/app-start.sh
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - laravel_admin_network
    secrets:
      - mysql_password
      - redis_password
      - app_key
    healthcheck:
      test: ["CMD", "php", "artisan", "tinker", "--execute=echo 'OK';"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  mysql:
    image: mysql:8.0
    container_name: laravel_admin_mysql_prod
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ${DB_DATABASE:-mg_db}
      MYSQL_USER: ${DB_USERNAME:-db_user}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/prod-simple.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - laravel_admin_network
    secrets:
      - mysql_root_password
      - mysql_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$(cat /run/secrets/mysql_root_password)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # deploy:
      # resources:
        # limits:
          # memory: 1G
        # reservations:
          # memory: 512M

  redis:
    image: redis:7-alpine
    container_name: laravel_admin_redis_prod
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./docker/scripts/redis-start.sh:/usr/local/bin/redis-start.sh:ro
      - redis_logs:/var/log/redis
    command: sh /usr/local/bin/redis-start.sh
    restart: unless-stopped
    networks:
      - laravel_admin_network
    secrets:
      - redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "$$(cat /run/secrets/redis_password)", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  # Queue Worker 背景任務處理
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.prod
    container_name: laravel_admin_queue_prod
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./.env.production:/var/www/html/.env:ro
      - app_logs:/var/www/html/storage/logs
      - ./docker/scripts:/scripts:ro
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-mg_db}
      - DB_USERNAME=${DB_USERNAME:-db_user}
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    command: /scripts/queue-start.sh
    depends_on:
      - mysql
      - redis
      - app
    restart: unless-stopped
    networks:
      - laravel_admin_network
    secrets:
      - mysql_password
      - redis_password
      - app_key
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # 備份服務
  backup:
    image: alpine:latest
    container_name: laravel_admin_backup_prod
    volumes:
      - mysql_data:/backup/mysql:ro
      - ./storage:/backup/storage:ro
      - backup_data:/backup/output
      - ./docker/scripts:/scripts:ro
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=${DB_DATABASE:-mg_db}
      - MYSQL_USER=${DB_USERNAME:-db_user}
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
    depends_on:
      - mysql
    restart: "no"
    networks:
      - laravel_admin_network
    secrets:
      - mysql_password
    command: /scripts/backup.sh

networks:
  laravel_admin_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  ssl_certs:
    driver: local
  nginx_logs:
    driver: local
  app_logs:
    driver: local
  mysql_logs:
    driver: local
  redis_logs:
    driver: local
  backup_data:
    driver: local

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  app_key:
    file: ./secrets/app_key.txt