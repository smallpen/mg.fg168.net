name: Role Management Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/Livewire/Admin/Roles/**'
      - 'app/Services/**'
      - 'app/Repositories/**'
      - 'app/Models/Role.php'
      - 'app/Models/Permission.php'
      - 'tests/Integration/RoleManagement/**'
      - 'tests/Performance/RoleManagement/**'
      - 'tests/Browser/RoleManagement/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/Livewire/Admin/Roles/**'
      - 'app/Services/**'
      - 'app/Repositories/**'
      - 'app/Models/Role.php'
      - 'app/Models/Permission.php'
      - 'tests/Integration/RoleManagement/**'
      - 'tests/Performance/RoleManagement/**'
      - 'tests/Browser/RoleManagement/**'

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.2, 8.3]
        test-suite: [integration, performance]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug
    
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader
        npm ci
        npm run build
    
    - name: Copy environment file
      run: cp .env.testing.integration .env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Create SQLite database
      run: touch database/database.sqlite
    
    - name: Run database migrations
      run: php artisan migrate --force
    
    - name: Run Integration Tests
      if: matrix.test-suite == 'integration'
      run: |
        php artisan test \
          --testsuite="Role Management Integration" \
          --coverage \
          --coverage-clover=coverage/integration-clover.xml \
          --log-junit=reports/integration-junit.xml
    
    - name: Run Performance Tests
      if: matrix.test-suite == 'performance'
      run: |
        php artisan test \
          --testsuite="Role Management Performance" \
          --log-junit=reports/performance-junit.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-php${{ matrix.php-version }}-${{ matrix.test-suite }}
        path: |
          reports/
          coverage/
    
    - name: Upload coverage to Codecov
      if: matrix.test-suite == 'integration' && matrix.php-version == '8.2'
      uses: codecov/codecov-action@v3
      with:
        file: coverage/integration-clover.xml
        flags: integration
        name: role-management-integration

  browser-tests:
    name: Browser Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
    
    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --no-progress
        npm ci
        npm run build
    
    - name: Copy environment file
      run: cp .env.testing.integration .env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Create database
      run: php artisan migrate --force
    
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install ChromeDriver
      run: php artisan dusk:chrome-driver
    
    - name: Start Laravel server
      run: php artisan serve --host=127.0.0.1 --port=8000 &
      env:
        APP_URL: http://127.0.0.1:8000
    
    - name: Wait for server
      run: sleep 5
    
    - name: Run Browser Tests
      run: |
        php artisan dusk \
          --testsuite="Role Management Browser" \
          --log-junit=reports/browser-junit.xml
      env:
        DUSK_DRIVER_URL: http://localhost:9515
        APP_URL: http://127.0.0.1:8000
    
    - name: Upload browser test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: browser-test-results
        path: |
          reports/
          tests/Browser/screenshots/
          tests/Browser/console/
    
    - name: Upload browser test artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: browser-test-failures
        path: |
          tests/Browser/screenshots/
          tests/Browser/console/
          storage/logs/

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress
    
    - name: Run security analysis
      run: |
        composer require --dev enlightn/security-checker
        vendor/bin/security-checker security:check composer.lock
    
    - name: Run static analysis
      run: |
        composer require --dev phpstan/phpstan
        vendor/bin/phpstan analyse app/Livewire/Admin/Roles app/Services app/Repositories --level=5

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress
    
    - name: Run PHP CS Fixer
      run: |
        composer require --dev friendsofphp/php-cs-fixer
        vendor/bin/php-cs-fixer fix --dry-run --diff --verbose
    
    - name: Run PHPStan
      run: |
        composer require --dev phpstan/phpstan
        vendor/bin/phpstan analyse app/Livewire/Admin/Roles app/Services app/Repositories --level=5

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [integration-tests, browser-tests, security-tests, code-quality]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.integration-tests.result == 'success' && needs.browser-tests.result == 'success'
      run: echo "All role management integration tests passed!"
    
    - name: Notify failure
      if: needs.integration-tests.result == 'failure' || needs.browser-tests.result == 'failure'
      run: |
        echo "Some role management integration tests failed!"
        exit 1